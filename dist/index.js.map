{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["//import 'photon/dist/css/photon.css';\nimport preact from 'preact';\n\n/** @jsx h */\n\nlet h = preact && preact.h;\n\n/** Inject your own JSX renderer. */\nexport function setJsxRenderer(renderer) {\n\th = renderer;\n}\n\n/** @private */\nfunction component(render) {\n\treturn render;\n\t// class F extends Component {}\n\t// F.prototype.render = render;\n\t// return F;\n}\n\n/** @private */\nfunction c(...args) {\n\treturn [].concat(...args.filter( x=>x )).join(' ');\n}\n\n/** @private */\nfunction componentNode(name, classes) {\n\treturn component( props => {\n\t\tlet c = <div {...props} class={c(props.class, classes)}>{props.children}</div>;\n\t\tc.nodeName = name;\n\t\treturn c;\n\t});\n}\n\n/** App \"footer\" bar, shown at the bottom of a window.\n *\t@class\n */\nexport const Header = componentNode('header', ['toolbar toolbar-header']);\n\n/** App \"header\" bar, shown at the top of a window.\n *\t@class\n */\nexport const Footer = componentNode('footer', ['toolbar toolbar-footer']);\n\n/** Toolbar title.\n *\t@class\n */\nexport const Title = componentNode('h1', 'title');\n\n\n/** Group buttons together.\n *\t@class\n *\t@example\n *\t<ButtonGroup>\n *\t\t<Button>One</Button>\n *\t\t<Button>Two</Button>\n *\t</ButtonGroup>\n */\nexport const ButtonGroup = componentNode('div', 'btn-group');\n\n/** Buttons. They are clickable.\n *\t@class\n *\t@param {object} props\n *\t@param {string} [icon]\t\t\t\tIf supplied, shows the given named icon to the left of the button text\n *\t@param {boolean} [primary=false]\tMake the button display as a default action\n *\t@example\n *\t<Button>Label Text</Button>\n *\t@example\n *\t<Button icon=\"home\">Home</Button>\n *\t@example\n *\t<Button large>Large Button</Button>\n *\t@example\n *\t<Button mini>Small Button</Button>\n *\t@example\n *\t<Button primary>Preferred Action</Button>\n *\t@example\n *\t<Button type=\"positive\">Green</Button>\n *\t@example\n *\t<Button type=\"negative\">Red</Button>\n *\t@example\n *\t<Button type=\"warning\">Yellow</Button>\n */\nexport const Button = component( props => (\n\t<button {...props} class={c(\n\t\tprops.class,\n\t\t`btn btn-${props.type || (props.primary ? 'primary' : 'default')}`,\n\t\tprops.dropdown && 'btn-dropdown',\n\t\tprops.large && 'btn-large',\n\t\tprops.mini && 'btn-mini',\n\t\tprops.form && 'btn-form'\n\t)}>\n\t\t{ props.icon ? (<Icon name={props.icon} text />) : null }\n\t\t{ props.children }\n\t</button>\n));\n\n\n/** A named icon/glyph from the nice built-in list of icons.\n *\t@class\n *\t@example\n *\t<Icon name=\"close\" />\n */\nexport const Icon = component( props => (\n\t<span {...props} class={c(props.class, `icon icon-${props.name}`, props.text && 'icon-text')}>\n\t\t{ props.children }\n\t</span>\n));\n\n\n/** Groups tabs together into a horizontal.\n *\t@class\n *\t@example\n *\t<TabGroup>\n *\t\t<Tab>One</Tab>\n *\t\t<Tab>Two</Tab>\n *\t</TabGroup>\n */\nexport const TabGroup = componentNode('div', 'tab-group');\n\n/** For building MDIs. Has a close button by default, add `close=\"false\"` to turn it off.\n *\t@class\n *\t@example\n *\t<Tab>title</Tab>\n *\t@example\n *\t<Tab close=\"false\">title</Tab>\n */\nexport const Tab = component( props => (\n\t<div class={c(props.class, 'tab-item')}>\n\t\t{ String(props.close)==='false' ? null : <Icon name=\"cancel\" class=\"icon-close-tab\" /> }\n\t\t{ props.children }\n\t</div>\n));\n\nTabGroup.Item = Tab;\n\n\n/** Group of sidebar navigation items\n *\t@class\n *\t@example\n *\t<NavGroup>\n *\t\t<NavGroup.Title>Faves</NavGroup.Title>\n *\t\t<NavGroup.Item>Foo</NavGroup.Item>\n *\t</NavGroup>\n */\nexport const NavGroup = componentNode('nav', 'nav-group');\n\n/** Title for a group of navigation items.\n *\t@class\n *\t@example\n *\t<NavGroup.Title>Faves</NavGroup.Title>\n */\nNavGroup.Title = componentNode('h5', 'nav-group-title');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<NavGroup.Item>Home</NavGroup.Item>\n *\t@example\n *\t<NavGroup.Item icon=\"folder\">Documents</NavGroup.Item>\n */\nNavGroup.Item = component( props => (\n\t<span {...props} class={c(props.class, 'nav-group-item')}>\n\t\t{ props.icon ? (<Icon name={props.icon} />) : null }\n\t\t{ props.children }\n\t</span>\n));\n\n\n/** Group of list items\n *\t@class\n *\t@example\n *\t<ListGroup>\n *\t\t<ListGroup.Header>\n *\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t\t</ListGroup.Header>\n *\t\t<ListGroup.Item>Foo</ListGroup.Item>\n *\t</ListGroup>\n */\nexport const ListGroup = componentNode('ul', 'list-group');\n\n/** Top header item in a list group.\n *\t@class\n *\t@example\n *\t<ListGroup.Header>\n *\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t</ListGroup.Header>\n */\nListGroup.Header = componentNode('li', 'list-group-header');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<ListGroup.Item>Home</ListGroup.Item>\n */\nListGroup.Item = componentNode('li', 'list-group-item');\n\n\n/** HTML `<form>` */\nconst Form = componentNode('form');\n\n/** Basically `<fieldset>` */\nForm.Group = componentNode('div', 'form-group');\n\n/** Basically `<input type=\"checkbox\">` */\nForm.CheckBox = component( props => (\n\t<div {...props} class={c(props.class, 'checkbox')}>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name={props.name} checked={props.checked} value={props.value} />\n\t\t\t{ [].concat(props.label || [], props.children || []) }\n\t\t</label>\n\t</div>\n));\n\n/** Basically `<input type=\"radio\">` */\nForm.Radio = component( props => (\n\t<div {...props} class={c(props.class, 'radio')}>\n\t\t<label>\n\t\t\t<input type=\"radio\" name={props.name} checked={props.checked} value={props.value} />\n\t\t\t{ [].concat(props.label || [], props.children || []) }\n\t\t</label>\n\t</div>\n));\n\n/** Group buttons at the bottom of a form. */\nForm.Actions = componentNode('div', 'form-actions');\n\n\n/** Just an enhanced `<table>` */\nexport const Table = component( props => (\n\t<table {...props} class={c(props.class, props.striped && 'table-striped')}>\n\t\t{ props.children }\n\t</table>\n));\n\n\n// export class Header extends Component {\n// \trender({ toolbar, title, children }) {\n// \t\treturn (\n// \t\t\t<header class=\"toolbar toolbar-header\">\n// \t\t\t\t{ title ? (<h1 class=\"title\">{ title }</h1>) : null }\n// \t\t\t\t{ children }\n// \t\t\t</header>\n// \t\t);\n// \t}\n// }\n//\n// export class Button extends Component {\n// \trender({ icon, children }) {\n// \t\treturn (\n// \t\t\t<button class=\"btn btn-default\">\n// \t\t\t\t{ icon ? (<Icon icon=\"home\" text />) : null }\n// \t\t\t\t{ children }\n// \t\t\t</button>\n// \t\t);\n// \t}\n// }\n"]}